Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    QUOTE
    WHITESPACE

Grammar

Rule 0     S' -> full_query
Rule 1     node_clause -> LPAREN KEY RPAREN
Rule 2     node_clause -> LPAREN COLON NAME RPAREN
Rule 3     node_clause -> LPAREN KEY COLON condition_list RPAREN
Rule 4     node_clause -> LPAREN KEY COLON NAME RPAREN
Rule 5     node_clause -> LPAREN KEY COLON NAME condition_list RPAREN
Rule 6     condition_list -> KEY COLON BOOL
Rule 7     condition_list -> KEY COLON STRING
Rule 8     condition_list -> KEY COLON INTEGER
Rule 9     condition_list -> condition_list COMMA condition_list
Rule 10    condition_list -> LCURLEY condition_list RCURLEY
Rule 11    condition_list -> KEY COLON condition_list
Rule 12    constraint -> keypath EQUALS STRING
Rule 13    constraint -> keypath EQUALS INTEGER
Rule 14    constraint -> keypath EQUALS keypath
Rule 15    constraint -> keypath NOT_EQUAL INTEGER
Rule 16    constraint -> keypath GREATERTHAN INTEGER
Rule 17    constraint -> keypath GREATERTHAN_OR_EQUAL INTEGER
Rule 18    constraint -> keypath LESSTHAN INTEGER
Rule 19    constraint -> keypath LESSTHAN_OR_EQUAL INTEGER
Rule 20    constraint -> constraint OR constraint
Rule 21    constraint -> constraint AND constraint
Rule 22    constraint -> NOT constraint
Rule 23    constraint -> LPAREN constraint RPAREN
Rule 24    where_clause -> WHERE constraint
Rule 25    keypath -> KEY DOT KEY
Rule 26    keypath -> keypath DOT KEY
Rule 27    edge_condition -> LBRACKET RBRACKET
Rule 28    edge_condition -> LBRACKET COLON NAME RBRACKET
Rule 29    edge_condition -> LBRACKET COLON NAME condition_list RBRACKET
Rule 30    edge_condition -> LBRACKET STAR INTEGER DOT DOT INTEGER RBRACKET
Rule 31    edge_condition -> LBRACKET STAR DOT DOT INTEGER RBRACKET
Rule 32    edge_condition -> LBRACKET STAR INTEGER DOT DOT RBRACKET
Rule 33    edge_condition -> LBRACKET STAR RBRACKET
Rule 34    edge_condition -> LBRACKET KEY COLON NAME RBRACKET
Rule 35    edge_condition -> LBRACKET KEY COLON NAME condition_list RBRACKET
Rule 36    labeled_edge -> DASH edge_condition DASH GREATERTHAN
Rule 37    labeled_edge -> LESSTHAN DASH edge_condition DASH
Rule 38    literals -> node_clause
Rule 39    literals -> literals COMMA literals
Rule 40    literals -> literals RIGHT_ARROW literals
Rule 41    literals -> literals LEFT_ARROW literals
Rule 42    literals -> literals labeled_edge literals
Rule 43    match_where -> MATCH literals
Rule 44    match_where -> MATCH literals where_clause
Rule 45    create_clause -> CREATE literals
Rule 46    full_query -> match_where return_variables
Rule 47    full_query -> create_clause
Rule 48    full_query -> create_clause return_variables
Rule 49    return_variables -> RETURN KEY
Rule 50    return_variables -> RETURN keypath
Rule 51    return_variables -> return_variables COMMA KEY
Rule 52    return_variables -> return_variables COMMA keypath

Terminals, with rules where they appear

AND                  : 21
BOOL                 : 6
COLON                : 2 3 4 5 6 7 8 11 28 29 34 35
COMMA                : 9 39 51 52
CREATE               : 45
DASH                 : 36 36 37 37
DOT                  : 25 26 30 30 31 31 32 32
EQUALS               : 12 13 14
GREATERTHAN          : 16 36
GREATERTHAN_OR_EQUAL : 17
INTEGER              : 8 13 15 16 17 18 19 30 30 31 32
KEY                  : 1 3 4 5 6 7 8 11 25 25 26 34 35 49 51
LBRACKET             : 27 28 29 30 31 32 33 34 35
LCURLEY              : 10
LEFT_ARROW           : 41
LESSTHAN             : 18 37
LESSTHAN_OR_EQUAL    : 19
LPAREN               : 1 2 3 4 5 23
MATCH                : 43 44
NAME                 : 2 4 5 28 29 34 35
NOT                  : 22
NOT_EQUAL            : 15
OR                   : 20
QUOTE                : 
RBRACKET             : 27 28 29 30 31 32 33 34 35
RCURLEY              : 10
RETURN               : 49 50
RIGHT_ARROW          : 40
RPAREN               : 1 2 3 4 5 23
STAR                 : 30 31 32 33
STRING               : 7 12
WHERE                : 24
WHITESPACE           : 
error                : 

Nonterminals, with rules where they appear

condition_list       : 3 5 9 9 10 11 29 35
constraint           : 20 20 21 21 22 23 24
create_clause        : 47 48
edge_condition       : 36 37
full_query           : 0
keypath              : 12 13 14 14 15 16 17 18 19 26 50 52
labeled_edge         : 42
literals             : 39 39 40 40 41 41 42 42 43 44 45
match_where          : 46
node_clause          : 38
return_variables     : 46 48 51 52
where_clause         : 44

Parsing method: LALR

state 0

    (0) S' -> . full_query
    (46) full_query -> . match_where return_variables
    (47) full_query -> . create_clause
    (48) full_query -> . create_clause return_variables
    (43) match_where -> . MATCH literals
    (44) match_where -> . MATCH literals where_clause
    (45) create_clause -> . CREATE literals

    MATCH           shift and go to state 4
    CREATE          shift and go to state 5

    full_query                     shift and go to state 1
    match_where                    shift and go to state 2
    create_clause                  shift and go to state 3

state 1

    (0) S' -> full_query .



state 2

    (46) full_query -> match_where . return_variables
    (49) return_variables -> . RETURN KEY
    (50) return_variables -> . RETURN keypath
    (51) return_variables -> . return_variables COMMA KEY
    (52) return_variables -> . return_variables COMMA keypath

    RETURN          shift and go to state 7

    return_variables               shift and go to state 6

state 3

    (47) full_query -> create_clause .
    (48) full_query -> create_clause . return_variables
    (49) return_variables -> . RETURN KEY
    (50) return_variables -> . RETURN keypath
    (51) return_variables -> . return_variables COMMA KEY
    (52) return_variables -> . return_variables COMMA keypath

    $end            reduce using rule 47 (full_query -> create_clause .)
    RETURN          shift and go to state 7

    return_variables               shift and go to state 8

state 4

    (43) match_where -> MATCH . literals
    (44) match_where -> MATCH . literals where_clause
    (38) literals -> . node_clause
    (39) literals -> . literals COMMA literals
    (40) literals -> . literals RIGHT_ARROW literals
    (41) literals -> . literals LEFT_ARROW literals
    (42) literals -> . literals labeled_edge literals
    (1) node_clause -> . LPAREN KEY RPAREN
    (2) node_clause -> . LPAREN COLON NAME RPAREN
    (3) node_clause -> . LPAREN KEY COLON condition_list RPAREN
    (4) node_clause -> . LPAREN KEY COLON NAME RPAREN
    (5) node_clause -> . LPAREN KEY COLON NAME condition_list RPAREN

    LPAREN          shift and go to state 11

    literals                       shift and go to state 9
    node_clause                    shift and go to state 10

state 5

    (45) create_clause -> CREATE . literals
    (38) literals -> . node_clause
    (39) literals -> . literals COMMA literals
    (40) literals -> . literals RIGHT_ARROW literals
    (41) literals -> . literals LEFT_ARROW literals
    (42) literals -> . literals labeled_edge literals
    (1) node_clause -> . LPAREN KEY RPAREN
    (2) node_clause -> . LPAREN COLON NAME RPAREN
    (3) node_clause -> . LPAREN KEY COLON condition_list RPAREN
    (4) node_clause -> . LPAREN KEY COLON NAME RPAREN
    (5) node_clause -> . LPAREN KEY COLON NAME condition_list RPAREN

    LPAREN          shift and go to state 11

    literals                       shift and go to state 12
    node_clause                    shift and go to state 10

state 6

    (46) full_query -> match_where return_variables .
    (51) return_variables -> return_variables . COMMA KEY
    (52) return_variables -> return_variables . COMMA keypath

    $end            reduce using rule 46 (full_query -> match_where return_variables .)
    COMMA           shift and go to state 13


state 7

    (49) return_variables -> RETURN . KEY
    (50) return_variables -> RETURN . keypath
    (25) keypath -> . KEY DOT KEY
    (26) keypath -> . keypath DOT KEY

    KEY             shift and go to state 14

    keypath                        shift and go to state 15

state 8

    (48) full_query -> create_clause return_variables .
    (51) return_variables -> return_variables . COMMA KEY
    (52) return_variables -> return_variables . COMMA keypath

    $end            reduce using rule 48 (full_query -> create_clause return_variables .)
    COMMA           shift and go to state 13


state 9

    (43) match_where -> MATCH literals .
    (44) match_where -> MATCH literals . where_clause
    (39) literals -> literals . COMMA literals
    (40) literals -> literals . RIGHT_ARROW literals
    (41) literals -> literals . LEFT_ARROW literals
    (42) literals -> literals . labeled_edge literals
    (24) where_clause -> . WHERE constraint
    (36) labeled_edge -> . DASH edge_condition DASH GREATERTHAN
    (37) labeled_edge -> . LESSTHAN DASH edge_condition DASH

    RETURN          reduce using rule 43 (match_where -> MATCH literals .)
    COMMA           shift and go to state 17
    RIGHT_ARROW     shift and go to state 18
    LEFT_ARROW      shift and go to state 19
    WHERE           shift and go to state 21
    DASH            shift and go to state 22
    LESSTHAN        shift and go to state 23

    where_clause                   shift and go to state 16
    labeled_edge                   shift and go to state 20

state 10

    (38) literals -> node_clause .

    COMMA           reduce using rule 38 (literals -> node_clause .)
    RIGHT_ARROW     reduce using rule 38 (literals -> node_clause .)
    LEFT_ARROW      reduce using rule 38 (literals -> node_clause .)
    WHERE           reduce using rule 38 (literals -> node_clause .)
    DASH            reduce using rule 38 (literals -> node_clause .)
    LESSTHAN        reduce using rule 38 (literals -> node_clause .)
    RETURN          reduce using rule 38 (literals -> node_clause .)
    $end            reduce using rule 38 (literals -> node_clause .)


state 11

    (1) node_clause -> LPAREN . KEY RPAREN
    (2) node_clause -> LPAREN . COLON NAME RPAREN
    (3) node_clause -> LPAREN . KEY COLON condition_list RPAREN
    (4) node_clause -> LPAREN . KEY COLON NAME RPAREN
    (5) node_clause -> LPAREN . KEY COLON NAME condition_list RPAREN

    KEY             shift and go to state 24
    COLON           shift and go to state 25


state 12

    (45) create_clause -> CREATE literals .
    (39) literals -> literals . COMMA literals
    (40) literals -> literals . RIGHT_ARROW literals
    (41) literals -> literals . LEFT_ARROW literals
    (42) literals -> literals . labeled_edge literals
    (36) labeled_edge -> . DASH edge_condition DASH GREATERTHAN
    (37) labeled_edge -> . LESSTHAN DASH edge_condition DASH

    RETURN          reduce using rule 45 (create_clause -> CREATE literals .)
    $end            reduce using rule 45 (create_clause -> CREATE literals .)
    COMMA           shift and go to state 17
    RIGHT_ARROW     shift and go to state 18
    LEFT_ARROW      shift and go to state 19
    DASH            shift and go to state 22
    LESSTHAN        shift and go to state 23

    labeled_edge                   shift and go to state 20

state 13

    (51) return_variables -> return_variables COMMA . KEY
    (52) return_variables -> return_variables COMMA . keypath
    (25) keypath -> . KEY DOT KEY
    (26) keypath -> . keypath DOT KEY

    KEY             shift and go to state 26

    keypath                        shift and go to state 27

state 14

    (49) return_variables -> RETURN KEY .
    (25) keypath -> KEY . DOT KEY

    COMMA           reduce using rule 49 (return_variables -> RETURN KEY .)
    $end            reduce using rule 49 (return_variables -> RETURN KEY .)
    DOT             shift and go to state 28


state 15

    (50) return_variables -> RETURN keypath .
    (26) keypath -> keypath . DOT KEY

    COMMA           reduce using rule 50 (return_variables -> RETURN keypath .)
    $end            reduce using rule 50 (return_variables -> RETURN keypath .)
    DOT             shift and go to state 29


state 16

    (44) match_where -> MATCH literals where_clause .

    RETURN          reduce using rule 44 (match_where -> MATCH literals where_clause .)


state 17

    (39) literals -> literals COMMA . literals
    (38) literals -> . node_clause
    (39) literals -> . literals COMMA literals
    (40) literals -> . literals RIGHT_ARROW literals
    (41) literals -> . literals LEFT_ARROW literals
    (42) literals -> . literals labeled_edge literals
    (1) node_clause -> . LPAREN KEY RPAREN
    (2) node_clause -> . LPAREN COLON NAME RPAREN
    (3) node_clause -> . LPAREN KEY COLON condition_list RPAREN
    (4) node_clause -> . LPAREN KEY COLON NAME RPAREN
    (5) node_clause -> . LPAREN KEY COLON NAME condition_list RPAREN

    LPAREN          shift and go to state 11

    literals                       shift and go to state 30
    node_clause                    shift and go to state 10

state 18

    (40) literals -> literals RIGHT_ARROW . literals
    (38) literals -> . node_clause
    (39) literals -> . literals COMMA literals
    (40) literals -> . literals RIGHT_ARROW literals
    (41) literals -> . literals LEFT_ARROW literals
    (42) literals -> . literals labeled_edge literals
    (1) node_clause -> . LPAREN KEY RPAREN
    (2) node_clause -> . LPAREN COLON NAME RPAREN
    (3) node_clause -> . LPAREN KEY COLON condition_list RPAREN
    (4) node_clause -> . LPAREN KEY COLON NAME RPAREN
    (5) node_clause -> . LPAREN KEY COLON NAME condition_list RPAREN

    LPAREN          shift and go to state 11

    literals                       shift and go to state 31
    node_clause                    shift and go to state 10

state 19

    (41) literals -> literals LEFT_ARROW . literals
    (38) literals -> . node_clause
    (39) literals -> . literals COMMA literals
    (40) literals -> . literals RIGHT_ARROW literals
    (41) literals -> . literals LEFT_ARROW literals
    (42) literals -> . literals labeled_edge literals
    (1) node_clause -> . LPAREN KEY RPAREN
    (2) node_clause -> . LPAREN COLON NAME RPAREN
    (3) node_clause -> . LPAREN KEY COLON condition_list RPAREN
    (4) node_clause -> . LPAREN KEY COLON NAME RPAREN
    (5) node_clause -> . LPAREN KEY COLON NAME condition_list RPAREN

    LPAREN          shift and go to state 11

    literals                       shift and go to state 32
    node_clause                    shift and go to state 10

state 20

    (42) literals -> literals labeled_edge . literals
    (38) literals -> . node_clause
    (39) literals -> . literals COMMA literals
    (40) literals -> . literals RIGHT_ARROW literals
    (41) literals -> . literals LEFT_ARROW literals
    (42) literals -> . literals labeled_edge literals
    (1) node_clause -> . LPAREN KEY RPAREN
    (2) node_clause -> . LPAREN COLON NAME RPAREN
    (3) node_clause -> . LPAREN KEY COLON condition_list RPAREN
    (4) node_clause -> . LPAREN KEY COLON NAME RPAREN
    (5) node_clause -> . LPAREN KEY COLON NAME condition_list RPAREN

    LPAREN          shift and go to state 11

    literals                       shift and go to state 33
    node_clause                    shift and go to state 10

state 21

    (24) where_clause -> WHERE . constraint
    (12) constraint -> . keypath EQUALS STRING
    (13) constraint -> . keypath EQUALS INTEGER
    (14) constraint -> . keypath EQUALS keypath
    (15) constraint -> . keypath NOT_EQUAL INTEGER
    (16) constraint -> . keypath GREATERTHAN INTEGER
    (17) constraint -> . keypath GREATERTHAN_OR_EQUAL INTEGER
    (18) constraint -> . keypath LESSTHAN INTEGER
    (19) constraint -> . keypath LESSTHAN_OR_EQUAL INTEGER
    (20) constraint -> . constraint OR constraint
    (21) constraint -> . constraint AND constraint
    (22) constraint -> . NOT constraint
    (23) constraint -> . LPAREN constraint RPAREN
    (25) keypath -> . KEY DOT KEY
    (26) keypath -> . keypath DOT KEY

    NOT             shift and go to state 36
    LPAREN          shift and go to state 37
    KEY             shift and go to state 38

    constraint                     shift and go to state 34
    keypath                        shift and go to state 35

state 22

    (36) labeled_edge -> DASH . edge_condition DASH GREATERTHAN
    (27) edge_condition -> . LBRACKET RBRACKET
    (28) edge_condition -> . LBRACKET COLON NAME RBRACKET
    (29) edge_condition -> . LBRACKET COLON NAME condition_list RBRACKET
    (30) edge_condition -> . LBRACKET STAR INTEGER DOT DOT INTEGER RBRACKET
    (31) edge_condition -> . LBRACKET STAR DOT DOT INTEGER RBRACKET
    (32) edge_condition -> . LBRACKET STAR INTEGER DOT DOT RBRACKET
    (33) edge_condition -> . LBRACKET STAR RBRACKET
    (34) edge_condition -> . LBRACKET KEY COLON NAME RBRACKET
    (35) edge_condition -> . LBRACKET KEY COLON NAME condition_list RBRACKET

    LBRACKET        shift and go to state 40

    edge_condition                 shift and go to state 39

state 23

    (37) labeled_edge -> LESSTHAN . DASH edge_condition DASH

    DASH            shift and go to state 41


state 24

    (1) node_clause -> LPAREN KEY . RPAREN
    (3) node_clause -> LPAREN KEY . COLON condition_list RPAREN
    (4) node_clause -> LPAREN KEY . COLON NAME RPAREN
    (5) node_clause -> LPAREN KEY . COLON NAME condition_list RPAREN

    RPAREN          shift and go to state 42
    COLON           shift and go to state 43


state 25

    (2) node_clause -> LPAREN COLON . NAME RPAREN

    NAME            shift and go to state 44


state 26

    (51) return_variables -> return_variables COMMA KEY .
    (25) keypath -> KEY . DOT KEY

    COMMA           reduce using rule 51 (return_variables -> return_variables COMMA KEY .)
    $end            reduce using rule 51 (return_variables -> return_variables COMMA KEY .)
    DOT             shift and go to state 28


state 27

    (52) return_variables -> return_variables COMMA keypath .
    (26) keypath -> keypath . DOT KEY

    COMMA           reduce using rule 52 (return_variables -> return_variables COMMA keypath .)
    $end            reduce using rule 52 (return_variables -> return_variables COMMA keypath .)
    DOT             shift and go to state 29


state 28

    (25) keypath -> KEY DOT . KEY

    KEY             shift and go to state 45


state 29

    (26) keypath -> keypath DOT . KEY

    KEY             shift and go to state 46


state 30

    (39) literals -> literals COMMA literals .
    (39) literals -> literals . COMMA literals
    (40) literals -> literals . RIGHT_ARROW literals
    (41) literals -> literals . LEFT_ARROW literals
    (42) literals -> literals . labeled_edge literals
    (36) labeled_edge -> . DASH edge_condition DASH GREATERTHAN
    (37) labeled_edge -> . LESSTHAN DASH edge_condition DASH

  ! shift/reduce conflict for COMMA resolved as shift
  ! shift/reduce conflict for RIGHT_ARROW resolved as shift
  ! shift/reduce conflict for LEFT_ARROW resolved as shift
  ! shift/reduce conflict for DASH resolved as shift
  ! shift/reduce conflict for LESSTHAN resolved as shift
    WHERE           reduce using rule 39 (literals -> literals COMMA literals .)
    RETURN          reduce using rule 39 (literals -> literals COMMA literals .)
    $end            reduce using rule 39 (literals -> literals COMMA literals .)
    COMMA           shift and go to state 17
    RIGHT_ARROW     shift and go to state 18
    LEFT_ARROW      shift and go to state 19
    DASH            shift and go to state 22
    LESSTHAN        shift and go to state 23

  ! COMMA           [ reduce using rule 39 (literals -> literals COMMA literals .) ]
  ! RIGHT_ARROW     [ reduce using rule 39 (literals -> literals COMMA literals .) ]
  ! LEFT_ARROW      [ reduce using rule 39 (literals -> literals COMMA literals .) ]
  ! DASH            [ reduce using rule 39 (literals -> literals COMMA literals .) ]
  ! LESSTHAN        [ reduce using rule 39 (literals -> literals COMMA literals .) ]

    labeled_edge                   shift and go to state 20

state 31

    (40) literals -> literals RIGHT_ARROW literals .
    (39) literals -> literals . COMMA literals
    (40) literals -> literals . RIGHT_ARROW literals
    (41) literals -> literals . LEFT_ARROW literals
    (42) literals -> literals . labeled_edge literals
    (36) labeled_edge -> . DASH edge_condition DASH GREATERTHAN
    (37) labeled_edge -> . LESSTHAN DASH edge_condition DASH

  ! shift/reduce conflict for COMMA resolved as shift
  ! shift/reduce conflict for RIGHT_ARROW resolved as shift
  ! shift/reduce conflict for LEFT_ARROW resolved as shift
  ! shift/reduce conflict for DASH resolved as shift
  ! shift/reduce conflict for LESSTHAN resolved as shift
    WHERE           reduce using rule 40 (literals -> literals RIGHT_ARROW literals .)
    RETURN          reduce using rule 40 (literals -> literals RIGHT_ARROW literals .)
    $end            reduce using rule 40 (literals -> literals RIGHT_ARROW literals .)
    COMMA           shift and go to state 17
    RIGHT_ARROW     shift and go to state 18
    LEFT_ARROW      shift and go to state 19
    DASH            shift and go to state 22
    LESSTHAN        shift and go to state 23

  ! COMMA           [ reduce using rule 40 (literals -> literals RIGHT_ARROW literals .) ]
  ! RIGHT_ARROW     [ reduce using rule 40 (literals -> literals RIGHT_ARROW literals .) ]
  ! LEFT_ARROW      [ reduce using rule 40 (literals -> literals RIGHT_ARROW literals .) ]
  ! DASH            [ reduce using rule 40 (literals -> literals RIGHT_ARROW literals .) ]
  ! LESSTHAN        [ reduce using rule 40 (literals -> literals RIGHT_ARROW literals .) ]

    labeled_edge                   shift and go to state 20

state 32

    (41) literals -> literals LEFT_ARROW literals .
    (39) literals -> literals . COMMA literals
    (40) literals -> literals . RIGHT_ARROW literals
    (41) literals -> literals . LEFT_ARROW literals
    (42) literals -> literals . labeled_edge literals
    (36) labeled_edge -> . DASH edge_condition DASH GREATERTHAN
    (37) labeled_edge -> . LESSTHAN DASH edge_condition DASH

  ! shift/reduce conflict for COMMA resolved as shift
  ! shift/reduce conflict for RIGHT_ARROW resolved as shift
  ! shift/reduce conflict for LEFT_ARROW resolved as shift
  ! shift/reduce conflict for DASH resolved as shift
  ! shift/reduce conflict for LESSTHAN resolved as shift
    WHERE           reduce using rule 41 (literals -> literals LEFT_ARROW literals .)
    RETURN          reduce using rule 41 (literals -> literals LEFT_ARROW literals .)
    $end            reduce using rule 41 (literals -> literals LEFT_ARROW literals .)
    COMMA           shift and go to state 17
    RIGHT_ARROW     shift and go to state 18
    LEFT_ARROW      shift and go to state 19
    DASH            shift and go to state 22
    LESSTHAN        shift and go to state 23

  ! COMMA           [ reduce using rule 41 (literals -> literals LEFT_ARROW literals .) ]
  ! RIGHT_ARROW     [ reduce using rule 41 (literals -> literals LEFT_ARROW literals .) ]
  ! LEFT_ARROW      [ reduce using rule 41 (literals -> literals LEFT_ARROW literals .) ]
  ! DASH            [ reduce using rule 41 (literals -> literals LEFT_ARROW literals .) ]
  ! LESSTHAN        [ reduce using rule 41 (literals -> literals LEFT_ARROW literals .) ]

    labeled_edge                   shift and go to state 20

state 33

    (42) literals -> literals labeled_edge literals .
    (39) literals -> literals . COMMA literals
    (40) literals -> literals . RIGHT_ARROW literals
    (41) literals -> literals . LEFT_ARROW literals
    (42) literals -> literals . labeled_edge literals
    (36) labeled_edge -> . DASH edge_condition DASH GREATERTHAN
    (37) labeled_edge -> . LESSTHAN DASH edge_condition DASH

  ! shift/reduce conflict for COMMA resolved as shift
  ! shift/reduce conflict for RIGHT_ARROW resolved as shift
  ! shift/reduce conflict for LEFT_ARROW resolved as shift
  ! shift/reduce conflict for DASH resolved as shift
  ! shift/reduce conflict for LESSTHAN resolved as shift
    WHERE           reduce using rule 42 (literals -> literals labeled_edge literals .)
    RETURN          reduce using rule 42 (literals -> literals labeled_edge literals .)
    $end            reduce using rule 42 (literals -> literals labeled_edge literals .)
    COMMA           shift and go to state 17
    RIGHT_ARROW     shift and go to state 18
    LEFT_ARROW      shift and go to state 19
    DASH            shift and go to state 22
    LESSTHAN        shift and go to state 23

  ! COMMA           [ reduce using rule 42 (literals -> literals labeled_edge literals .) ]
  ! RIGHT_ARROW     [ reduce using rule 42 (literals -> literals labeled_edge literals .) ]
  ! LEFT_ARROW      [ reduce using rule 42 (literals -> literals labeled_edge literals .) ]
  ! DASH            [ reduce using rule 42 (literals -> literals labeled_edge literals .) ]
  ! LESSTHAN        [ reduce using rule 42 (literals -> literals labeled_edge literals .) ]

    labeled_edge                   shift and go to state 20

state 34

    (24) where_clause -> WHERE constraint .
    (20) constraint -> constraint . OR constraint
    (21) constraint -> constraint . AND constraint

    RETURN          reduce using rule 24 (where_clause -> WHERE constraint .)
    OR              shift and go to state 47
    AND             shift and go to state 48


state 35

    (12) constraint -> keypath . EQUALS STRING
    (13) constraint -> keypath . EQUALS INTEGER
    (14) constraint -> keypath . EQUALS keypath
    (15) constraint -> keypath . NOT_EQUAL INTEGER
    (16) constraint -> keypath . GREATERTHAN INTEGER
    (17) constraint -> keypath . GREATERTHAN_OR_EQUAL INTEGER
    (18) constraint -> keypath . LESSTHAN INTEGER
    (19) constraint -> keypath . LESSTHAN_OR_EQUAL INTEGER
    (26) keypath -> keypath . DOT KEY

    EQUALS          shift and go to state 49
    NOT_EQUAL       shift and go to state 50
    GREATERTHAN     shift and go to state 51
    GREATERTHAN_OR_EQUAL shift and go to state 52
    LESSTHAN        shift and go to state 53
    LESSTHAN_OR_EQUAL shift and go to state 54
    DOT             shift and go to state 29


state 36

    (22) constraint -> NOT . constraint
    (12) constraint -> . keypath EQUALS STRING
    (13) constraint -> . keypath EQUALS INTEGER
    (14) constraint -> . keypath EQUALS keypath
    (15) constraint -> . keypath NOT_EQUAL INTEGER
    (16) constraint -> . keypath GREATERTHAN INTEGER
    (17) constraint -> . keypath GREATERTHAN_OR_EQUAL INTEGER
    (18) constraint -> . keypath LESSTHAN INTEGER
    (19) constraint -> . keypath LESSTHAN_OR_EQUAL INTEGER
    (20) constraint -> . constraint OR constraint
    (21) constraint -> . constraint AND constraint
    (22) constraint -> . NOT constraint
    (23) constraint -> . LPAREN constraint RPAREN
    (25) keypath -> . KEY DOT KEY
    (26) keypath -> . keypath DOT KEY

    NOT             shift and go to state 36
    LPAREN          shift and go to state 37
    KEY             shift and go to state 38

    constraint                     shift and go to state 55
    keypath                        shift and go to state 35

state 37

    (23) constraint -> LPAREN . constraint RPAREN
    (12) constraint -> . keypath EQUALS STRING
    (13) constraint -> . keypath EQUALS INTEGER
    (14) constraint -> . keypath EQUALS keypath
    (15) constraint -> . keypath NOT_EQUAL INTEGER
    (16) constraint -> . keypath GREATERTHAN INTEGER
    (17) constraint -> . keypath GREATERTHAN_OR_EQUAL INTEGER
    (18) constraint -> . keypath LESSTHAN INTEGER
    (19) constraint -> . keypath LESSTHAN_OR_EQUAL INTEGER
    (20) constraint -> . constraint OR constraint
    (21) constraint -> . constraint AND constraint
    (22) constraint -> . NOT constraint
    (23) constraint -> . LPAREN constraint RPAREN
    (25) keypath -> . KEY DOT KEY
    (26) keypath -> . keypath DOT KEY

    NOT             shift and go to state 36
    LPAREN          shift and go to state 37
    KEY             shift and go to state 38

    constraint                     shift and go to state 56
    keypath                        shift and go to state 35

state 38

    (25) keypath -> KEY . DOT KEY

    DOT             shift and go to state 28


state 39

    (36) labeled_edge -> DASH edge_condition . DASH GREATERTHAN

    DASH            shift and go to state 57


state 40

    (27) edge_condition -> LBRACKET . RBRACKET
    (28) edge_condition -> LBRACKET . COLON NAME RBRACKET
    (29) edge_condition -> LBRACKET . COLON NAME condition_list RBRACKET
    (30) edge_condition -> LBRACKET . STAR INTEGER DOT DOT INTEGER RBRACKET
    (31) edge_condition -> LBRACKET . STAR DOT DOT INTEGER RBRACKET
    (32) edge_condition -> LBRACKET . STAR INTEGER DOT DOT RBRACKET
    (33) edge_condition -> LBRACKET . STAR RBRACKET
    (34) edge_condition -> LBRACKET . KEY COLON NAME RBRACKET
    (35) edge_condition -> LBRACKET . KEY COLON NAME condition_list RBRACKET

    RBRACKET        shift and go to state 58
    COLON           shift and go to state 59
    STAR            shift and go to state 60
    KEY             shift and go to state 61


state 41

    (37) labeled_edge -> LESSTHAN DASH . edge_condition DASH
    (27) edge_condition -> . LBRACKET RBRACKET
    (28) edge_condition -> . LBRACKET COLON NAME RBRACKET
    (29) edge_condition -> . LBRACKET COLON NAME condition_list RBRACKET
    (30) edge_condition -> . LBRACKET STAR INTEGER DOT DOT INTEGER RBRACKET
    (31) edge_condition -> . LBRACKET STAR DOT DOT INTEGER RBRACKET
    (32) edge_condition -> . LBRACKET STAR INTEGER DOT DOT RBRACKET
    (33) edge_condition -> . LBRACKET STAR RBRACKET
    (34) edge_condition -> . LBRACKET KEY COLON NAME RBRACKET
    (35) edge_condition -> . LBRACKET KEY COLON NAME condition_list RBRACKET

    LBRACKET        shift and go to state 40

    edge_condition                 shift and go to state 62

state 42

    (1) node_clause -> LPAREN KEY RPAREN .

    COMMA           reduce using rule 1 (node_clause -> LPAREN KEY RPAREN .)
    RIGHT_ARROW     reduce using rule 1 (node_clause -> LPAREN KEY RPAREN .)
    LEFT_ARROW      reduce using rule 1 (node_clause -> LPAREN KEY RPAREN .)
    WHERE           reduce using rule 1 (node_clause -> LPAREN KEY RPAREN .)
    DASH            reduce using rule 1 (node_clause -> LPAREN KEY RPAREN .)
    LESSTHAN        reduce using rule 1 (node_clause -> LPAREN KEY RPAREN .)
    RETURN          reduce using rule 1 (node_clause -> LPAREN KEY RPAREN .)
    $end            reduce using rule 1 (node_clause -> LPAREN KEY RPAREN .)


state 43

    (3) node_clause -> LPAREN KEY COLON . condition_list RPAREN
    (4) node_clause -> LPAREN KEY COLON . NAME RPAREN
    (5) node_clause -> LPAREN KEY COLON . NAME condition_list RPAREN
    (6) condition_list -> . KEY COLON BOOL
    (7) condition_list -> . KEY COLON STRING
    (8) condition_list -> . KEY COLON INTEGER
    (9) condition_list -> . condition_list COMMA condition_list
    (10) condition_list -> . LCURLEY condition_list RCURLEY
    (11) condition_list -> . KEY COLON condition_list

    NAME            shift and go to state 65
    KEY             shift and go to state 63
    LCURLEY         shift and go to state 66

    condition_list                 shift and go to state 64

state 44

    (2) node_clause -> LPAREN COLON NAME . RPAREN

    RPAREN          shift and go to state 67


state 45

    (25) keypath -> KEY DOT KEY .

    DOT             reduce using rule 25 (keypath -> KEY DOT KEY .)
    COMMA           reduce using rule 25 (keypath -> KEY DOT KEY .)
    $end            reduce using rule 25 (keypath -> KEY DOT KEY .)
    EQUALS          reduce using rule 25 (keypath -> KEY DOT KEY .)
    NOT_EQUAL       reduce using rule 25 (keypath -> KEY DOT KEY .)
    GREATERTHAN     reduce using rule 25 (keypath -> KEY DOT KEY .)
    GREATERTHAN_OR_EQUAL reduce using rule 25 (keypath -> KEY DOT KEY .)
    LESSTHAN        reduce using rule 25 (keypath -> KEY DOT KEY .)
    LESSTHAN_OR_EQUAL reduce using rule 25 (keypath -> KEY DOT KEY .)
    OR              reduce using rule 25 (keypath -> KEY DOT KEY .)
    AND             reduce using rule 25 (keypath -> KEY DOT KEY .)
    RETURN          reduce using rule 25 (keypath -> KEY DOT KEY .)
    RPAREN          reduce using rule 25 (keypath -> KEY DOT KEY .)


state 46

    (26) keypath -> keypath DOT KEY .

    DOT             reduce using rule 26 (keypath -> keypath DOT KEY .)
    COMMA           reduce using rule 26 (keypath -> keypath DOT KEY .)
    $end            reduce using rule 26 (keypath -> keypath DOT KEY .)
    EQUALS          reduce using rule 26 (keypath -> keypath DOT KEY .)
    NOT_EQUAL       reduce using rule 26 (keypath -> keypath DOT KEY .)
    GREATERTHAN     reduce using rule 26 (keypath -> keypath DOT KEY .)
    GREATERTHAN_OR_EQUAL reduce using rule 26 (keypath -> keypath DOT KEY .)
    LESSTHAN        reduce using rule 26 (keypath -> keypath DOT KEY .)
    LESSTHAN_OR_EQUAL reduce using rule 26 (keypath -> keypath DOT KEY .)
    OR              reduce using rule 26 (keypath -> keypath DOT KEY .)
    AND             reduce using rule 26 (keypath -> keypath DOT KEY .)
    RETURN          reduce using rule 26 (keypath -> keypath DOT KEY .)
    RPAREN          reduce using rule 26 (keypath -> keypath DOT KEY .)


state 47

    (20) constraint -> constraint OR . constraint
    (12) constraint -> . keypath EQUALS STRING
    (13) constraint -> . keypath EQUALS INTEGER
    (14) constraint -> . keypath EQUALS keypath
    (15) constraint -> . keypath NOT_EQUAL INTEGER
    (16) constraint -> . keypath GREATERTHAN INTEGER
    (17) constraint -> . keypath GREATERTHAN_OR_EQUAL INTEGER
    (18) constraint -> . keypath LESSTHAN INTEGER
    (19) constraint -> . keypath LESSTHAN_OR_EQUAL INTEGER
    (20) constraint -> . constraint OR constraint
    (21) constraint -> . constraint AND constraint
    (22) constraint -> . NOT constraint
    (23) constraint -> . LPAREN constraint RPAREN
    (25) keypath -> . KEY DOT KEY
    (26) keypath -> . keypath DOT KEY

    NOT             shift and go to state 36
    LPAREN          shift and go to state 37
    KEY             shift and go to state 38

    constraint                     shift and go to state 68
    keypath                        shift and go to state 35

state 48

    (21) constraint -> constraint AND . constraint
    (12) constraint -> . keypath EQUALS STRING
    (13) constraint -> . keypath EQUALS INTEGER
    (14) constraint -> . keypath EQUALS keypath
    (15) constraint -> . keypath NOT_EQUAL INTEGER
    (16) constraint -> . keypath GREATERTHAN INTEGER
    (17) constraint -> . keypath GREATERTHAN_OR_EQUAL INTEGER
    (18) constraint -> . keypath LESSTHAN INTEGER
    (19) constraint -> . keypath LESSTHAN_OR_EQUAL INTEGER
    (20) constraint -> . constraint OR constraint
    (21) constraint -> . constraint AND constraint
    (22) constraint -> . NOT constraint
    (23) constraint -> . LPAREN constraint RPAREN
    (25) keypath -> . KEY DOT KEY
    (26) keypath -> . keypath DOT KEY

    NOT             shift and go to state 36
    LPAREN          shift and go to state 37
    KEY             shift and go to state 38

    constraint                     shift and go to state 69
    keypath                        shift and go to state 35

state 49

    (12) constraint -> keypath EQUALS . STRING
    (13) constraint -> keypath EQUALS . INTEGER
    (14) constraint -> keypath EQUALS . keypath
    (25) keypath -> . KEY DOT KEY
    (26) keypath -> . keypath DOT KEY

    STRING          shift and go to state 71
    INTEGER         shift and go to state 72
    KEY             shift and go to state 38

    keypath                        shift and go to state 70

state 50

    (15) constraint -> keypath NOT_EQUAL . INTEGER

    INTEGER         shift and go to state 73


state 51

    (16) constraint -> keypath GREATERTHAN . INTEGER

    INTEGER         shift and go to state 74


state 52

    (17) constraint -> keypath GREATERTHAN_OR_EQUAL . INTEGER

    INTEGER         shift and go to state 75


state 53

    (18) constraint -> keypath LESSTHAN . INTEGER

    INTEGER         shift and go to state 76


state 54

    (19) constraint -> keypath LESSTHAN_OR_EQUAL . INTEGER

    INTEGER         shift and go to state 77


state 55

    (22) constraint -> NOT constraint .
    (20) constraint -> constraint . OR constraint
    (21) constraint -> constraint . AND constraint

  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
    RETURN          reduce using rule 22 (constraint -> NOT constraint .)
    RPAREN          reduce using rule 22 (constraint -> NOT constraint .)
    OR              shift and go to state 47
    AND             shift and go to state 48

  ! OR              [ reduce using rule 22 (constraint -> NOT constraint .) ]
  ! AND             [ reduce using rule 22 (constraint -> NOT constraint .) ]


state 56

    (23) constraint -> LPAREN constraint . RPAREN
    (20) constraint -> constraint . OR constraint
    (21) constraint -> constraint . AND constraint

    RPAREN          shift and go to state 78
    OR              shift and go to state 47
    AND             shift and go to state 48


state 57

    (36) labeled_edge -> DASH edge_condition DASH . GREATERTHAN

    GREATERTHAN     shift and go to state 79


state 58

    (27) edge_condition -> LBRACKET RBRACKET .

    DASH            reduce using rule 27 (edge_condition -> LBRACKET RBRACKET .)


state 59

    (28) edge_condition -> LBRACKET COLON . NAME RBRACKET
    (29) edge_condition -> LBRACKET COLON . NAME condition_list RBRACKET

    NAME            shift and go to state 80


state 60

    (30) edge_condition -> LBRACKET STAR . INTEGER DOT DOT INTEGER RBRACKET
    (31) edge_condition -> LBRACKET STAR . DOT DOT INTEGER RBRACKET
    (32) edge_condition -> LBRACKET STAR . INTEGER DOT DOT RBRACKET
    (33) edge_condition -> LBRACKET STAR . RBRACKET

    INTEGER         shift and go to state 81
    DOT             shift and go to state 82
    RBRACKET        shift and go to state 83


state 61

    (34) edge_condition -> LBRACKET KEY . COLON NAME RBRACKET
    (35) edge_condition -> LBRACKET KEY . COLON NAME condition_list RBRACKET

    COLON           shift and go to state 84


state 62

    (37) labeled_edge -> LESSTHAN DASH edge_condition . DASH

    DASH            shift and go to state 85


state 63

    (6) condition_list -> KEY . COLON BOOL
    (7) condition_list -> KEY . COLON STRING
    (8) condition_list -> KEY . COLON INTEGER
    (11) condition_list -> KEY . COLON condition_list

    COLON           shift and go to state 86


state 64

    (3) node_clause -> LPAREN KEY COLON condition_list . RPAREN
    (9) condition_list -> condition_list . COMMA condition_list

    RPAREN          shift and go to state 87
    COMMA           shift and go to state 88


state 65

    (4) node_clause -> LPAREN KEY COLON NAME . RPAREN
    (5) node_clause -> LPAREN KEY COLON NAME . condition_list RPAREN
    (6) condition_list -> . KEY COLON BOOL
    (7) condition_list -> . KEY COLON STRING
    (8) condition_list -> . KEY COLON INTEGER
    (9) condition_list -> . condition_list COMMA condition_list
    (10) condition_list -> . LCURLEY condition_list RCURLEY
    (11) condition_list -> . KEY COLON condition_list

    RPAREN          shift and go to state 89
    KEY             shift and go to state 63
    LCURLEY         shift and go to state 66

    condition_list                 shift and go to state 90

state 66

    (10) condition_list -> LCURLEY . condition_list RCURLEY
    (6) condition_list -> . KEY COLON BOOL
    (7) condition_list -> . KEY COLON STRING
    (8) condition_list -> . KEY COLON INTEGER
    (9) condition_list -> . condition_list COMMA condition_list
    (10) condition_list -> . LCURLEY condition_list RCURLEY
    (11) condition_list -> . KEY COLON condition_list

    KEY             shift and go to state 63
    LCURLEY         shift and go to state 66

    condition_list                 shift and go to state 91

state 67

    (2) node_clause -> LPAREN COLON NAME RPAREN .

    COMMA           reduce using rule 2 (node_clause -> LPAREN COLON NAME RPAREN .)
    RIGHT_ARROW     reduce using rule 2 (node_clause -> LPAREN COLON NAME RPAREN .)
    LEFT_ARROW      reduce using rule 2 (node_clause -> LPAREN COLON NAME RPAREN .)
    WHERE           reduce using rule 2 (node_clause -> LPAREN COLON NAME RPAREN .)
    DASH            reduce using rule 2 (node_clause -> LPAREN COLON NAME RPAREN .)
    LESSTHAN        reduce using rule 2 (node_clause -> LPAREN COLON NAME RPAREN .)
    RETURN          reduce using rule 2 (node_clause -> LPAREN COLON NAME RPAREN .)
    $end            reduce using rule 2 (node_clause -> LPAREN COLON NAME RPAREN .)


state 68

    (20) constraint -> constraint OR constraint .
    (20) constraint -> constraint . OR constraint
    (21) constraint -> constraint . AND constraint

  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
    RETURN          reduce using rule 20 (constraint -> constraint OR constraint .)
    RPAREN          reduce using rule 20 (constraint -> constraint OR constraint .)
    OR              shift and go to state 47
    AND             shift and go to state 48

  ! OR              [ reduce using rule 20 (constraint -> constraint OR constraint .) ]
  ! AND             [ reduce using rule 20 (constraint -> constraint OR constraint .) ]


state 69

    (21) constraint -> constraint AND constraint .
    (20) constraint -> constraint . OR constraint
    (21) constraint -> constraint . AND constraint

  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
    RETURN          reduce using rule 21 (constraint -> constraint AND constraint .)
    RPAREN          reduce using rule 21 (constraint -> constraint AND constraint .)
    OR              shift and go to state 47
    AND             shift and go to state 48

  ! OR              [ reduce using rule 21 (constraint -> constraint AND constraint .) ]
  ! AND             [ reduce using rule 21 (constraint -> constraint AND constraint .) ]


state 70

    (14) constraint -> keypath EQUALS keypath .
    (26) keypath -> keypath . DOT KEY

    OR              reduce using rule 14 (constraint -> keypath EQUALS keypath .)
    AND             reduce using rule 14 (constraint -> keypath EQUALS keypath .)
    RETURN          reduce using rule 14 (constraint -> keypath EQUALS keypath .)
    RPAREN          reduce using rule 14 (constraint -> keypath EQUALS keypath .)
    DOT             shift and go to state 29


state 71

    (12) constraint -> keypath EQUALS STRING .

    OR              reduce using rule 12 (constraint -> keypath EQUALS STRING .)
    AND             reduce using rule 12 (constraint -> keypath EQUALS STRING .)
    RETURN          reduce using rule 12 (constraint -> keypath EQUALS STRING .)
    RPAREN          reduce using rule 12 (constraint -> keypath EQUALS STRING .)


state 72

    (13) constraint -> keypath EQUALS INTEGER .

    OR              reduce using rule 13 (constraint -> keypath EQUALS INTEGER .)
    AND             reduce using rule 13 (constraint -> keypath EQUALS INTEGER .)
    RETURN          reduce using rule 13 (constraint -> keypath EQUALS INTEGER .)
    RPAREN          reduce using rule 13 (constraint -> keypath EQUALS INTEGER .)


state 73

    (15) constraint -> keypath NOT_EQUAL INTEGER .

    OR              reduce using rule 15 (constraint -> keypath NOT_EQUAL INTEGER .)
    AND             reduce using rule 15 (constraint -> keypath NOT_EQUAL INTEGER .)
    RETURN          reduce using rule 15 (constraint -> keypath NOT_EQUAL INTEGER .)
    RPAREN          reduce using rule 15 (constraint -> keypath NOT_EQUAL INTEGER .)


state 74

    (16) constraint -> keypath GREATERTHAN INTEGER .

    OR              reduce using rule 16 (constraint -> keypath GREATERTHAN INTEGER .)
    AND             reduce using rule 16 (constraint -> keypath GREATERTHAN INTEGER .)
    RETURN          reduce using rule 16 (constraint -> keypath GREATERTHAN INTEGER .)
    RPAREN          reduce using rule 16 (constraint -> keypath GREATERTHAN INTEGER .)


state 75

    (17) constraint -> keypath GREATERTHAN_OR_EQUAL INTEGER .

    OR              reduce using rule 17 (constraint -> keypath GREATERTHAN_OR_EQUAL INTEGER .)
    AND             reduce using rule 17 (constraint -> keypath GREATERTHAN_OR_EQUAL INTEGER .)
    RETURN          reduce using rule 17 (constraint -> keypath GREATERTHAN_OR_EQUAL INTEGER .)
    RPAREN          reduce using rule 17 (constraint -> keypath GREATERTHAN_OR_EQUAL INTEGER .)


state 76

    (18) constraint -> keypath LESSTHAN INTEGER .

    OR              reduce using rule 18 (constraint -> keypath LESSTHAN INTEGER .)
    AND             reduce using rule 18 (constraint -> keypath LESSTHAN INTEGER .)
    RETURN          reduce using rule 18 (constraint -> keypath LESSTHAN INTEGER .)
    RPAREN          reduce using rule 18 (constraint -> keypath LESSTHAN INTEGER .)


state 77

    (19) constraint -> keypath LESSTHAN_OR_EQUAL INTEGER .

    OR              reduce using rule 19 (constraint -> keypath LESSTHAN_OR_EQUAL INTEGER .)
    AND             reduce using rule 19 (constraint -> keypath LESSTHAN_OR_EQUAL INTEGER .)
    RETURN          reduce using rule 19 (constraint -> keypath LESSTHAN_OR_EQUAL INTEGER .)
    RPAREN          reduce using rule 19 (constraint -> keypath LESSTHAN_OR_EQUAL INTEGER .)


state 78

    (23) constraint -> LPAREN constraint RPAREN .

    OR              reduce using rule 23 (constraint -> LPAREN constraint RPAREN .)
    AND             reduce using rule 23 (constraint -> LPAREN constraint RPAREN .)
    RETURN          reduce using rule 23 (constraint -> LPAREN constraint RPAREN .)
    RPAREN          reduce using rule 23 (constraint -> LPAREN constraint RPAREN .)


state 79

    (36) labeled_edge -> DASH edge_condition DASH GREATERTHAN .

    LPAREN          reduce using rule 36 (labeled_edge -> DASH edge_condition DASH GREATERTHAN .)


state 80

    (28) edge_condition -> LBRACKET COLON NAME . RBRACKET
    (29) edge_condition -> LBRACKET COLON NAME . condition_list RBRACKET
    (6) condition_list -> . KEY COLON BOOL
    (7) condition_list -> . KEY COLON STRING
    (8) condition_list -> . KEY COLON INTEGER
    (9) condition_list -> . condition_list COMMA condition_list
    (10) condition_list -> . LCURLEY condition_list RCURLEY
    (11) condition_list -> . KEY COLON condition_list

    RBRACKET        shift and go to state 92
    KEY             shift and go to state 63
    LCURLEY         shift and go to state 66

    condition_list                 shift and go to state 93

state 81

    (30) edge_condition -> LBRACKET STAR INTEGER . DOT DOT INTEGER RBRACKET
    (32) edge_condition -> LBRACKET STAR INTEGER . DOT DOT RBRACKET

    DOT             shift and go to state 94


state 82

    (31) edge_condition -> LBRACKET STAR DOT . DOT INTEGER RBRACKET

    DOT             shift and go to state 95


state 83

    (33) edge_condition -> LBRACKET STAR RBRACKET .

    DASH            reduce using rule 33 (edge_condition -> LBRACKET STAR RBRACKET .)


state 84

    (34) edge_condition -> LBRACKET KEY COLON . NAME RBRACKET
    (35) edge_condition -> LBRACKET KEY COLON . NAME condition_list RBRACKET

    NAME            shift and go to state 96


state 85

    (37) labeled_edge -> LESSTHAN DASH edge_condition DASH .

    LPAREN          reduce using rule 37 (labeled_edge -> LESSTHAN DASH edge_condition DASH .)


state 86

    (6) condition_list -> KEY COLON . BOOL
    (7) condition_list -> KEY COLON . STRING
    (8) condition_list -> KEY COLON . INTEGER
    (11) condition_list -> KEY COLON . condition_list
    (6) condition_list -> . KEY COLON BOOL
    (7) condition_list -> . KEY COLON STRING
    (8) condition_list -> . KEY COLON INTEGER
    (9) condition_list -> . condition_list COMMA condition_list
    (10) condition_list -> . LCURLEY condition_list RCURLEY
    (11) condition_list -> . KEY COLON condition_list

    BOOL            shift and go to state 97
    STRING          shift and go to state 98
    INTEGER         shift and go to state 99
    KEY             shift and go to state 63
    LCURLEY         shift and go to state 66

    condition_list                 shift and go to state 100

state 87

    (3) node_clause -> LPAREN KEY COLON condition_list RPAREN .

    COMMA           reduce using rule 3 (node_clause -> LPAREN KEY COLON condition_list RPAREN .)
    RIGHT_ARROW     reduce using rule 3 (node_clause -> LPAREN KEY COLON condition_list RPAREN .)
    LEFT_ARROW      reduce using rule 3 (node_clause -> LPAREN KEY COLON condition_list RPAREN .)
    WHERE           reduce using rule 3 (node_clause -> LPAREN KEY COLON condition_list RPAREN .)
    DASH            reduce using rule 3 (node_clause -> LPAREN KEY COLON condition_list RPAREN .)
    LESSTHAN        reduce using rule 3 (node_clause -> LPAREN KEY COLON condition_list RPAREN .)
    RETURN          reduce using rule 3 (node_clause -> LPAREN KEY COLON condition_list RPAREN .)
    $end            reduce using rule 3 (node_clause -> LPAREN KEY COLON condition_list RPAREN .)


state 88

    (9) condition_list -> condition_list COMMA . condition_list
    (6) condition_list -> . KEY COLON BOOL
    (7) condition_list -> . KEY COLON STRING
    (8) condition_list -> . KEY COLON INTEGER
    (9) condition_list -> . condition_list COMMA condition_list
    (10) condition_list -> . LCURLEY condition_list RCURLEY
    (11) condition_list -> . KEY COLON condition_list

    KEY             shift and go to state 63
    LCURLEY         shift and go to state 66

    condition_list                 shift and go to state 101

state 89

    (4) node_clause -> LPAREN KEY COLON NAME RPAREN .

    COMMA           reduce using rule 4 (node_clause -> LPAREN KEY COLON NAME RPAREN .)
    RIGHT_ARROW     reduce using rule 4 (node_clause -> LPAREN KEY COLON NAME RPAREN .)
    LEFT_ARROW      reduce using rule 4 (node_clause -> LPAREN KEY COLON NAME RPAREN .)
    WHERE           reduce using rule 4 (node_clause -> LPAREN KEY COLON NAME RPAREN .)
    DASH            reduce using rule 4 (node_clause -> LPAREN KEY COLON NAME RPAREN .)
    LESSTHAN        reduce using rule 4 (node_clause -> LPAREN KEY COLON NAME RPAREN .)
    RETURN          reduce using rule 4 (node_clause -> LPAREN KEY COLON NAME RPAREN .)
    $end            reduce using rule 4 (node_clause -> LPAREN KEY COLON NAME RPAREN .)


state 90

    (5) node_clause -> LPAREN KEY COLON NAME condition_list . RPAREN
    (9) condition_list -> condition_list . COMMA condition_list

    RPAREN          shift and go to state 102
    COMMA           shift and go to state 88


state 91

    (10) condition_list -> LCURLEY condition_list . RCURLEY
    (9) condition_list -> condition_list . COMMA condition_list

    RCURLEY         shift and go to state 103
    COMMA           shift and go to state 88


state 92

    (28) edge_condition -> LBRACKET COLON NAME RBRACKET .

    DASH            reduce using rule 28 (edge_condition -> LBRACKET COLON NAME RBRACKET .)


state 93

    (29) edge_condition -> LBRACKET COLON NAME condition_list . RBRACKET
    (9) condition_list -> condition_list . COMMA condition_list

    RBRACKET        shift and go to state 104
    COMMA           shift and go to state 88


state 94

    (30) edge_condition -> LBRACKET STAR INTEGER DOT . DOT INTEGER RBRACKET
    (32) edge_condition -> LBRACKET STAR INTEGER DOT . DOT RBRACKET

    DOT             shift and go to state 105


state 95

    (31) edge_condition -> LBRACKET STAR DOT DOT . INTEGER RBRACKET

    INTEGER         shift and go to state 106


state 96

    (34) edge_condition -> LBRACKET KEY COLON NAME . RBRACKET
    (35) edge_condition -> LBRACKET KEY COLON NAME . condition_list RBRACKET
    (6) condition_list -> . KEY COLON BOOL
    (7) condition_list -> . KEY COLON STRING
    (8) condition_list -> . KEY COLON INTEGER
    (9) condition_list -> . condition_list COMMA condition_list
    (10) condition_list -> . LCURLEY condition_list RCURLEY
    (11) condition_list -> . KEY COLON condition_list

    RBRACKET        shift and go to state 107
    KEY             shift and go to state 63
    LCURLEY         shift and go to state 66

    condition_list                 shift and go to state 108

state 97

    (6) condition_list -> KEY COLON BOOL .

    RPAREN          reduce using rule 6 (condition_list -> KEY COLON BOOL .)
    COMMA           reduce using rule 6 (condition_list -> KEY COLON BOOL .)
    RCURLEY         reduce using rule 6 (condition_list -> KEY COLON BOOL .)
    RBRACKET        reduce using rule 6 (condition_list -> KEY COLON BOOL .)


state 98

    (7) condition_list -> KEY COLON STRING .

    RPAREN          reduce using rule 7 (condition_list -> KEY COLON STRING .)
    COMMA           reduce using rule 7 (condition_list -> KEY COLON STRING .)
    RCURLEY         reduce using rule 7 (condition_list -> KEY COLON STRING .)
    RBRACKET        reduce using rule 7 (condition_list -> KEY COLON STRING .)


state 99

    (8) condition_list -> KEY COLON INTEGER .

    RPAREN          reduce using rule 8 (condition_list -> KEY COLON INTEGER .)
    COMMA           reduce using rule 8 (condition_list -> KEY COLON INTEGER .)
    RCURLEY         reduce using rule 8 (condition_list -> KEY COLON INTEGER .)
    RBRACKET        reduce using rule 8 (condition_list -> KEY COLON INTEGER .)


state 100

    (11) condition_list -> KEY COLON condition_list .
    (9) condition_list -> condition_list . COMMA condition_list

  ! shift/reduce conflict for COMMA resolved as shift
    RPAREN          reduce using rule 11 (condition_list -> KEY COLON condition_list .)
    RCURLEY         reduce using rule 11 (condition_list -> KEY COLON condition_list .)
    RBRACKET        reduce using rule 11 (condition_list -> KEY COLON condition_list .)
    COMMA           shift and go to state 88

  ! COMMA           [ reduce using rule 11 (condition_list -> KEY COLON condition_list .) ]


state 101

    (9) condition_list -> condition_list COMMA condition_list .
    (9) condition_list -> condition_list . COMMA condition_list

  ! shift/reduce conflict for COMMA resolved as shift
    RPAREN          reduce using rule 9 (condition_list -> condition_list COMMA condition_list .)
    RCURLEY         reduce using rule 9 (condition_list -> condition_list COMMA condition_list .)
    RBRACKET        reduce using rule 9 (condition_list -> condition_list COMMA condition_list .)
    COMMA           shift and go to state 88

  ! COMMA           [ reduce using rule 9 (condition_list -> condition_list COMMA condition_list .) ]


state 102

    (5) node_clause -> LPAREN KEY COLON NAME condition_list RPAREN .

    COMMA           reduce using rule 5 (node_clause -> LPAREN KEY COLON NAME condition_list RPAREN .)
    RIGHT_ARROW     reduce using rule 5 (node_clause -> LPAREN KEY COLON NAME condition_list RPAREN .)
    LEFT_ARROW      reduce using rule 5 (node_clause -> LPAREN KEY COLON NAME condition_list RPAREN .)
    WHERE           reduce using rule 5 (node_clause -> LPAREN KEY COLON NAME condition_list RPAREN .)
    DASH            reduce using rule 5 (node_clause -> LPAREN KEY COLON NAME condition_list RPAREN .)
    LESSTHAN        reduce using rule 5 (node_clause -> LPAREN KEY COLON NAME condition_list RPAREN .)
    RETURN          reduce using rule 5 (node_clause -> LPAREN KEY COLON NAME condition_list RPAREN .)
    $end            reduce using rule 5 (node_clause -> LPAREN KEY COLON NAME condition_list RPAREN .)


state 103

    (10) condition_list -> LCURLEY condition_list RCURLEY .

    RPAREN          reduce using rule 10 (condition_list -> LCURLEY condition_list RCURLEY .)
    COMMA           reduce using rule 10 (condition_list -> LCURLEY condition_list RCURLEY .)
    RCURLEY         reduce using rule 10 (condition_list -> LCURLEY condition_list RCURLEY .)
    RBRACKET        reduce using rule 10 (condition_list -> LCURLEY condition_list RCURLEY .)


state 104

    (29) edge_condition -> LBRACKET COLON NAME condition_list RBRACKET .

    DASH            reduce using rule 29 (edge_condition -> LBRACKET COLON NAME condition_list RBRACKET .)


state 105

    (30) edge_condition -> LBRACKET STAR INTEGER DOT DOT . INTEGER RBRACKET
    (32) edge_condition -> LBRACKET STAR INTEGER DOT DOT . RBRACKET

    INTEGER         shift and go to state 109
    RBRACKET        shift and go to state 110


state 106

    (31) edge_condition -> LBRACKET STAR DOT DOT INTEGER . RBRACKET

    RBRACKET        shift and go to state 111


state 107

    (34) edge_condition -> LBRACKET KEY COLON NAME RBRACKET .

    DASH            reduce using rule 34 (edge_condition -> LBRACKET KEY COLON NAME RBRACKET .)


state 108

    (35) edge_condition -> LBRACKET KEY COLON NAME condition_list . RBRACKET
    (9) condition_list -> condition_list . COMMA condition_list

    RBRACKET        shift and go to state 112
    COMMA           shift and go to state 88


state 109

    (30) edge_condition -> LBRACKET STAR INTEGER DOT DOT INTEGER . RBRACKET

    RBRACKET        shift and go to state 113


state 110

    (32) edge_condition -> LBRACKET STAR INTEGER DOT DOT RBRACKET .

    DASH            reduce using rule 32 (edge_condition -> LBRACKET STAR INTEGER DOT DOT RBRACKET .)


state 111

    (31) edge_condition -> LBRACKET STAR DOT DOT INTEGER RBRACKET .

    DASH            reduce using rule 31 (edge_condition -> LBRACKET STAR DOT DOT INTEGER RBRACKET .)


state 112

    (35) edge_condition -> LBRACKET KEY COLON NAME condition_list RBRACKET .

    DASH            reduce using rule 35 (edge_condition -> LBRACKET KEY COLON NAME condition_list RBRACKET .)


state 113

    (30) edge_condition -> LBRACKET STAR INTEGER DOT DOT INTEGER RBRACKET .

    DASH            reduce using rule 30 (edge_condition -> LBRACKET STAR INTEGER DOT DOT INTEGER RBRACKET .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for COMMA in state 30 resolved as shift
WARNING: shift/reduce conflict for RIGHT_ARROW in state 30 resolved as shift
WARNING: shift/reduce conflict for LEFT_ARROW in state 30 resolved as shift
WARNING: shift/reduce conflict for DASH in state 30 resolved as shift
WARNING: shift/reduce conflict for LESSTHAN in state 30 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 31 resolved as shift
WARNING: shift/reduce conflict for RIGHT_ARROW in state 31 resolved as shift
WARNING: shift/reduce conflict for LEFT_ARROW in state 31 resolved as shift
WARNING: shift/reduce conflict for DASH in state 31 resolved as shift
WARNING: shift/reduce conflict for LESSTHAN in state 31 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 32 resolved as shift
WARNING: shift/reduce conflict for RIGHT_ARROW in state 32 resolved as shift
WARNING: shift/reduce conflict for LEFT_ARROW in state 32 resolved as shift
WARNING: shift/reduce conflict for DASH in state 32 resolved as shift
WARNING: shift/reduce conflict for LESSTHAN in state 32 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 33 resolved as shift
WARNING: shift/reduce conflict for RIGHT_ARROW in state 33 resolved as shift
WARNING: shift/reduce conflict for LEFT_ARROW in state 33 resolved as shift
WARNING: shift/reduce conflict for DASH in state 33 resolved as shift
WARNING: shift/reduce conflict for LESSTHAN in state 33 resolved as shift
WARNING: shift/reduce conflict for OR in state 55 resolved as shift
WARNING: shift/reduce conflict for AND in state 55 resolved as shift
WARNING: shift/reduce conflict for OR in state 68 resolved as shift
WARNING: shift/reduce conflict for AND in state 68 resolved as shift
WARNING: shift/reduce conflict for OR in state 69 resolved as shift
WARNING: shift/reduce conflict for AND in state 69 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 100 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 101 resolved as shift
